/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT &kp>;
    };
    screen1: screen1 {
      compatible = "zmk,behavior-macro";
      label = "SCREEN1";
      #binding-cells = <0>;
      bindings =
        <&kp LCMD &kp KP_NUMBER_1>,
        <&macro_tap>;
    };
    screen2: screen2 {
      compatible = "zmk,behavior-macro";
      label = "SCREEN2";
      #binding-cells = <0>;
      bindings =
        <&kp LCMD &kp KP_NUMBER_2>,
        <&macro_tap>;
    };
    screen3: screen3 {
      compatible = "zmk,behavior-macro";
      label = "SCREEN3";
      #binding-cells = <0>;
      bindings = <&kp LCMD &kp KP_NUMBER_3>;
    };
    screen4: screen4 {
      compatible = "zmk,behavior-macro";
      label = "SCREEN4";
      #binding-cells = <0>;
      bindings = <&kp LCMD &kp KP_NUMBER_4>;
    };
    screen5: screen5 {
      compatible = "zmk,behavior-macro";
      label = "SCREEN5";
      #binding-cells = <0>;
      bindings = <&kp LCMD &kp KP_NUMBER_5>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
  &kp TAB  &kp Q  &kp W     &kp E        &kp R       &kp T      &kp Y        &kp U          &kp I    &kp O     &kp P       &none
&kp LCTRL  &kp A  &kp S     &kp D        &kp F       &kp G      &kp H        &kp J          &kp K    &kp L  &kp SEMI    &kp APOS
&kp LSHFT  &kp Z  &kp X     &kp C        &kp V       &kp B      &kp N        &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                         &kp LCMD  &lt 1 SPACE  &kp ESCAPE    &kp RET  &lt 2 SPACE  &kp BACKSPACE
      >;
    };

    raise {
      bindings = <
&trans    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6    &kp N7    &kp N8     &kp N9         &kp N0       &trans
&trans  &screen1  &screen2  &screen3  &screen4  &screen5    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT    &kp PAGE_UP       &trans
&trans    &trans    &trans    &trans    &trans    &trans      &trans    &trans  &kp HOME    &kp END  &kp PAGE_DOWN  &bootloader
                              &trans    &trans    &trans      &trans     &mo 3    &trans
      >;
    };

    lower {
      bindings = <
     &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
     &trans    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&bootloader    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                 &trans     &mo 3     &trans       &trans     &trans           &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans    &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2      &bt BT_CLR  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans        &trans          &trans  &trans  &trans
      >;
    };
  };
};
